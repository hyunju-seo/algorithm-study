//[https://programmers.co.kr/learn/courses/30/lessons/42839](https://programmers.co.kr/learn/courses/30/lessons/42839
#include <string>
#include <vector>
#include<set>
using namespace std;
int remained[10]; //각 숫자를 몇 개 사용할 수 있는지

//소수인지 아닌지를 판단해주는 함수
bool isPrime(int n){
    if(n==1) return false;
    for(int i=2;i<n;i++){
        if(n%i==0) return false;
    } 
    return true;
}


//ex) nums=123일때, 123, 1234, 12345, 1235...중 prime인 것의 개수를 반환
int func(string numbers, string nums){
    int sum=0;
    if(isPrime(stoi(nums))) sum=1;
    int used[10]={0}; //nums 다음 자리 수(1234, 1235)가 될 수 있는지 여부(0이면 될 수 있다, 1이면 될 수 없다)

		//nums 다음 자리의 수를 구하는 과정
    for(auto n:numbers){
        int chartonum=n-'0';
        if(used[chartonum]==1) continue;
        if(remained[chartonum]==0) continue;
        used[chartonum]+=1;
        remained[chartonum]-=1;
        sum+=func(numbers,nums+n);
        remained[chartonum]+=1;
    }
    return sum;    
}



int solution(string numbers) {
    set<char> nums; //숫자 중복없이 골라내기
    for(auto n:numbers){
        remained[n-'0']+=1;
        nums.insert(n);
    }
    int answer = 0;
    for(auto n:nums){
        if(n-'0'==0) continue; //첫번째 수가 0인경우 걸러내기
        //첫번째 수가 n인 경우
        remained[n-'0']-=1; 
        string str="";
        answer+=func(numbers,str+n);
        remained[n-'0']+=1;
    }
    return answer;
}